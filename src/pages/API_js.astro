---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <main>
    <section class="situation">
      <h1 id="presentation">
        Se le dara una serie de casos para descubrir al posible culpable que
        apareceran debajo, si es correcto pasara al siguiente
      </h1>
      <a id="suspicious1">Posible Culpable 1</a>
      <br />
      <a id="suspicious2">Posible Culpable 2</a>
      <br />
      <a id="suspicious3">Posible Culpable 3</a>
      <br />
      <button class="next">Siguiente</button>
    </section>
  </main>
</Layout>

<style>
  * {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
  }
  body {
    background-image: url(/images/Pixel_Train.png);
    min-height: 100svh;
    margin: 0;
    background-repeat: no-repeat;
    background-size: cover;
    background-attachment: fixed;
  }

  .situation {
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  #presentation {
    width: 100%;
    max-width: 800px;
    margin: 0 auto;
    background-color: oklch(0.7794 0.1332 232.94);
    border: 2px solid black;
    padding: 8px 15px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    font-size: 18px;
    border-width: 1px;
    display: block;
    word-wrap: break-word; /*broke words like the command said  */
  }

  #suspicious1,
  #suspicious2,
  #suspicious3,
  .next {
    background-color: oklch(0.5118 0.1875 257.29);
    color: oklch(0.85 0.0321 257.29);
    border: none;
    padding: 10px 20px;
    cursor: pointer;
    font-size: 16px;
    margin-top: 10px;
  }

  .next:hover {
    color: white;
  }
</style>
<script>
  async function loadCases(x) {
    try {
      const response = await fetch("/api/cases.json");
      const data = await response.json();

      // Update the console
      document.getElementById("presentation")!.textContent = data[x].title;
      document.getElementById("suspicious1")!.textContent = data[x].suspicious1;
      document.getElementById("suspicious2")!.textContent = data[x].suspicious2;
      document.getElementById("suspicious3")!.textContent = data[x].suspicious3;

      // delete previous listeners
      if (currentAnswerListener) {
        document.querySelector(".situation");
        document.removeEventListener("click", currentAnswerListener);
      }

      // Create a new listener
      currentAnswerListener = handleAnswerClick(data, x);
      document.querySelector(".situation");
      document.addEventListener("click", currentAnswerListener);
    } catch (error) {
      console.error("Error:", error);
      document.getElementById("presentation")!.textContent = "Error";
    }
  }

  function handleAnswerClick(data, x) {
    return function (e) {
      if (e.target.matches("#suspicious1, #suspicious2, #suspicious3")) {
        if (e.target.textContent === data[x].correct) {
          // Eliminar este listener especÃ­fico
          document.querySelector(".situation");
          document.removeEventListener("click", currentAnswerListener!);
          // Cargar nuevo caso
          loadCases(getRandomId(1, 4));
        }
      }
    };
  }

  function getRandomId(min, max) {
    return Math.floor(Math.random() * (max - min) + min);
  }

  const $buttonNext = document.querySelector(".next");
  $buttonNext!.addEventListener("click", () => {
    loadCases(getRandomId(1, 4));
  });

  //load the first case
  let currentCaseId;
  let currentAnswerListener = null;
  loadCases(getRandomId(1, 4));
</script>
